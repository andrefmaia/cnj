<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Intimação da designação da audiência">
    <description><![CDATA[Código: INTDESAUD]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="solicitante">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('9:1469,10:1338,9:5197,10:5483,9:5945')}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - Intimação da designação da audiência"/>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="solicitante" priority="3"/>
        <transition to="Tem audiência desginada?" name="Tem audiência desginada?"/>
    </start-state>  
    <!-- NODES -->
    <decision expression="#{processoJudicialManager.getAudienciaDesignadaMaisAntiga(tramitacaoProcessualService.recuperaProcesso()) eq null ? 'Incluir no fluxo de operação de audiência' : 'Pode intimar via sistema?'}" name="Tem audiência desginada?">
        <transition to="Incluir no fluxo de operação de audiência" name="Incluir no fluxo de operação de audiência"/>
        <transition to="Pode intimar via sistema?" name="Pode intimar via sistema?"/>
    </decision>
    <node name="Incluir no fluxo de operação de audiência">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'OPAUD', processInstanceUtil.getVariables())}"/>
        </event>
    </node>
    <decision expression="#{atoComunicacaoService.verificarPossibilidadeIntimacaoEletronica(tramitacaoProcessualService.recuperaVariavel('processo'), 'A,P')  ? 'Intimar da designação da audiência' : 'Audiência - Intimar da designação'}" name="Pode intimar via sistema?">
        <transition to="Audiência - Intimar da designação" name="Audiência - Intimar da designação"/>
        <transition to="Intimar da designação da audiência" name="Intimar da designação da audiência"/>
    </decision>
    <node name="Intimar da designação da audiência">
        <transition to="Incluir no fluxo de operação de audiência" name="Incluir no fluxo de operação de audiência"/>
        <event type="node-enter">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:ultimoDocumentoJuntado', documentoJudicialService.gerarMinuta(tramitacaoProcessualService.recuperaVariavel('processo'),null,taskInstance.id,60,81))}"/>
            <action expression="#{documentoJudicialService.juntarDocumento(tramitacaoProcessualService.recuperaVariavel('pje:fluxo:ultimoDocumentoJuntado'),taskInstance.id)}"/>
            <action expression="#{atoComunicacaoService.intimarEletronicamente(tramitacaoProcessualService.recuperaVariavel('processo'),'A','S',null,tramitacaoProcessualService.recuperaVariavel('pje:fluxo:ultimoDocumentoJuntado'))}"/>
            <action expression="#{atoComunicacaoService.intimarEletronicamente(tramitacaoProcessualService.recuperaVariavel('processo'),'P','S',null,tramitacaoProcessualService.recuperaVariavel('pje:fluxo:ultimoDocumentoJuntado'))}"/>
        </event>
    </node>
    <task-node end-tasks="true" name="Audiência - Intimar da designação">
        <task name="Audiência - Intimar da designação" swimlane="solicitante" priority="3">
            <controller>
                <variable name="atencao" mapped-name="textMessage:atencao" access="read,write"/>
                <variable name="comunicacao" mapped-name="textEditAndAttachmentSignature:comunicacao" access="read,write"/>
                <variable name="miniPac" mapped-name="miniPAC:miniPac" access="read,write"/>
                <variable name="movimentarEmLote" mapped-name="movimentarLote:movimentarEmLote" access="read"/>
                <variable name="intimarEmLote" mapped-name="intimarLote:intimarEmLote" access="read"/>
            </controller>
        </task>
        <description><![CDATA[Variável: atencao
Label: Uma ou mais partes não puderam ser intimadas via sistema
Tipo: Aviso Customizado]]></description>
        <transition to="Incluir no fluxo de operação de audiência" name="Aguardar audiência"/>
        <transition to="Incluir no fluxo de análise da secretaria" name="Encaminhar para análise da secretaria"/>
        <transition to="Nó de Desvio - Intimação da designação da audiência" name="Nó de Desvio - Intimação da designação da audiência">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Partes selecionadas?" name="Partes selecionadas?">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action name="upd" expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{false}')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('prepararAto:meiosComunicacoes',centralMandadoManager.obterPorLocalizacoes(localizacaoManager.getArvoreAscendente(tramitacaoProcessualService.recuperaProcesso().getOrgaoJulgador().getLocalizacao().getIdLocalizacao(), true)).size() &gt; 0 ? 'E,C,M,T,S,G' : 'E,C,T,S,G')}"/>
            <action name="upd" expression="#{taskInstanceUtil.setFrameDefaultTransition('Partes selecionadas?')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos', 'Partes selecionadas?, Encaminhar para análise da secretaria, Aguardar audiência')}"/>
        </event>
        <event type="task-assign">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('tiposDisponiveisIds', not empty tramitacaoProcessualService.recuperaVariavel('jef:idsDocumentosPossiveis') ? tramitacaoProcessualService.recuperaVariavel('jef:idsDocumentosPossiveis') : parametroUtil.getParametro('pje:fluxo:idsDocumentosPAC'))}"/>
        </event>
    </task-node>
    <decision expression="#{miniPacAction.getMiniPacVOList().isEmpty() or miniPacAction.getMiniPacVOList().{destinatario | destinatario.getAtivo() and destinatario.getMeios().size() == 0}.contains(true) ? 'Selecionar partes' : 'Incluir no fluxo de análise da comunicação'}" name="Partes selecionadas?">
        <transition to="Incluir no fluxo de análise de comunicação" name="Incluir no fluxo de análise da comunicação"/>
        <transition to="Audiência - Selecionar partes para intimação da designação" name="Selecionar partes"/>
    </decision>
    <task-node end-tasks="true" name="Audiência - Selecionar partes para intimação da designação">
        <task name="Audiência - Selecionar partes para intimação da designação" swimlane="solicitante" priority="3">
            <controller>
                <variable name="atencao" mapped-name="textMessage:atencao" access="read,write"/>
                <variable name="miniPac" mapped-name="miniPAC:miniPac" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Variável: atencao
Label: Selecione ao menos uma parte para enviar a comunicação.
Tipo: Aviso Customizado]]></description>
        <transition to="Incluir no fluxo de análise da secretaria" name="Encaminhar para análise da secretaria"/>
        <transition to="Incluir no fluxo de análise de comunicação" name="Incluir no fluxo de análise de comunicação">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Nó de Desvio - Intimação da designação da audiência" name="Nó de Desvio - Intimação da designação da audiência">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('prepararAto:meiosComunicacoes',centralMandadoManager.obterPorLocalizacoes(localizacaoManager.getArvoreAscendente(tramitacaoProcessualService.recuperaProcesso().getOrgaoJulgador().getLocalizacao().getIdLocalizacao(), true)).size() &gt; 0 ? 'E,C,M,T,S,G' : 'E,C,T,S,G')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:miniPac:prazoGeral', '0')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:miniPac:DocJaExiste', true)}"/>
            <action name="upd" expression="#{taskInstanceUtil.setFrameDefaultTransition('Incluir no fluxo de análise de comunicação')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:transicao:dispensaRequeridos', 'Incluir no fluxo de análise de comunicação, Encaminhar para análise da secretaria')}"/>
        </event>
    </task-node>
    <node name="Incluir no fluxo de análise de comunicação">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{lancadorMovimentosService.apagarMovimentosTemporarios()}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minutaEmElaboracao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('condicaoLancamentoMovimentosTemporario')}"/>
            <action expression="#{tramitacaoProcessualService.gravaVariavel('fluxo:saida','Operação de audiência')}"/>
            <action expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'ANCOM', processInstanceUtil.getVariables())}"/>
        </event>
    </node>
    <node name="Incluir no fluxo de análise da secretaria">
        <transition to="Término" name="Término"/>
        <event type="node-enter">
            <action expression="#{processoDocumentoManager.removerDocumentoAPartirDeVariavalDeFluxo('minutaEmElaboracao')}"/>
            <action expression="#{miniPacService.apagarVariaveisMiniPacContexto()}"/>
            <action expression="#{lancadorMovimentosService.apagarMovimentosTemporarios()}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('minutaEmElaboracao')}"/>
            <action expression="#{tramitacaoProcessualService.apagaVariavel('condicaoLancamentoMovimentosTemporario')}"/>
            <action expression="#{processoJudicialService.incluirNovoFluxo(tramitacaoProcessualService.recuperaProcesso(), 'ANSEC', processInstanceUtil.getVariables())}"/>
        </event>
    </node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - Intimação da designação da audiência">
        <task name="Nó de Desvio - Intimação da designação da audiência" swimlane="Nó de Desvio - Intimação da designação da audiência" priority="3"/>
        <transition to="Término" name="Término"/>
        <transition to="Audiência - Intimar da designação" name="Audiência - Intimar da designação"/>
        <transition to="Audiência - Selecionar partes para intimação da designação" name="Audiência - Selecionar partes para intimação da designação"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
